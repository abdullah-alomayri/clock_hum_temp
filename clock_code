
// this is the main code
/*
* TimeRTC.pde
*
*/
#include <dht.h>

dht DHT;

#define DHT11_PIN 13

#include <Time.h> 
#include <Wire.h> 
#include <DS1307RTC.h>  // a basic DS1307 library that returns time as a time_t
#include <LiquidCrystal.h> 
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

int light = 7;                // the pin that the light of LCD is atteched to
int sensor = 8;              //motion sensor pin
int state = LOW;             // by default, no motion detected
int val = 0;
 
void setup()  {
  lcd.begin(20, 4); // type of LCD 20*4 (columns * rows)
 
  pinMode(light, OUTPUT);      // initalize ight as an output
  pinMode(sensor, INPUT);    // initialize sensor as an input
  Serial.begin(9600);
  setSyncProvider(RTC.get);   // the function to get the time from the RTC
  if(timeStatus()!= timeSet)
     Serial.println("Unable to sync with the RTC");
  else
     Serial.println("RTC has set the system time");
    
}

void loop()
{
  
   digitalClockDisplay(); 
   delay(1000);
   int chk = DHT.read11(DHT11_PIN);
  Serial.print("Temperature = ");
  Serial.println(DHT.temperature);
  Serial.print("Humidity = ");
  Serial.println(DHT.humidity);
  delay(1000);
}

void digitalClockDisplay(){
  // digital clock display of the time
  Serial.print(hour());
  printDigits(minute());
  printDigits(second());
  Serial.print(" ");
  Serial.print(day());
  Serial.print(" ");
  Serial.print(month());
  Serial.print(" ");
  Serial.print(year());
  Serial.println();
 
lcd.setCursor(0, 0);  // Set LCD cursor position (column, row)
lcd.print("TIME:  ");
lcd.print(hour());
lcd.print(":");
lcd.print (minute());
lcd.print(":");
lcd.print(second());
lcd.print(" ");

lcd.setCursor(0, 2);
lcd.print("Tmp: ");
lcd.print(DHT.temperature);


lcd.setCursor(0, 1); // Set LCD cursor position (column,row) 
lcd.print("DATE:  ");
lcd.print(day());
lcd.print(".");
lcd.print(month());
lcd.print(".");
lcd.print(year());

lcd.setCursor(11, 2);
lcd.print("Hu: ");
lcd.print(DHT.humidity);

lcd.setCursor(1, 3);
lcd.print(" *have a nice day* ");

}

void printDigits(int digits){
  // utility function for digital clock display: prints preceding colon and leading 0
  Serial.print(":");
  if(digits < 10)
    Serial.print('0');
  Serial.print(digits);
  
  val = digitalRead(sensor);   // read sensor value
  if (val == HIGH) {           // check if the sensor is HIGH
    digitalWrite(light, HIGH);   // turn LED ON
    delay(100);                // delay 100 milliseconds 
    
    if (state == LOW) {
      Serial.println("Motion detected!"); 
      state = HIGH;       // update variable state to HIGH
    }
  } 
  else {
      digitalWrite(light, LOW); // turn LED OFF
      delay(200);             // delay 200 milliseconds 
      
      if (state == HIGH){
        Serial.println("Motion stopped!");
        state = LOW;       // update variable state to LOW
    }
  }
}
